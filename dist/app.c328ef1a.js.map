{"version":3,"sources":["upload.js","app.js"],"names":["element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","Math","round","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","clearPreviewInfo","el","opacity","clearPreview","uploadHandler","querySelectorAll","e","previewInfo","addEventListener"],"mappings":";;ACAA;AAIA,IAAAY,cAAM,EAAC,OAAO,EAAE;EACdW,KAAK,EAAE,IAAI;EACXE,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;AAC1C,CAAC,CAAC;;;;;;ADPF,IAAMzB,OAAO,GAAG,SAAVA,OAAO,CAAIC,GAAG,EAA4B;EAAA,IAA1BC,OAAO,uEAAG,EAAE;EAAA,IAAEC,OAAO;EACzC,IAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAACL,GAAG,CAAC;EAExC,IAAIC,OAAO,CAACK,MAAM,EAAE;IAAA;IAClB,mBAAAH,IAAI,CAACI,SAAS,EAACC,GAAG,2CAAIP,OAAO,EAAC;EAChC;EAEA,IAAIC,OAAO,EAAE;IACXC,IAAI,CAACM,WAAW,GAAGP,OAAO;EAC5B;EAEA,OAAOC,IAAI;AACb,CAAC;AAED,SAASO,IAAI,GAAG,CAAE;AAEX,SAASC,MAAM,CAACC,QAAQ,EAAgB;EAAA;EAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;EAC3C,IAAIC,KAAK,GAAG,EAAE;EACd,IAAMC,QAAQ,wBAAGF,OAAO,CAACE,QAAQ,iEAAIL,IAAI;EACzC,IAAMM,KAAK,GAAGZ,QAAQ,CAACa,aAAa,CAACL,QAAQ,CAAC;EAC9C,IAAMM,OAAO,GAAGnB,OAAO,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC;EAC3C,IAAMoB,IAAI,GAAGpB,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC;EAC/C,IAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC;EAC5DY,MAAM,CAACS,KAAK,CAACC,OAAO,GAAG,MAAM;EAG7B,IAAIR,OAAO,CAACS,KAAK,EAAE;IACjBN,KAAK,CAACO,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;EACtC;EAEA,IAAIV,OAAO,CAACW,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACb,OAAO,CAACW,MAAM,CAAC,EAAE;IACnDR,KAAK,CAACO,YAAY,CAAC,QAAQ,EAAEV,OAAO,CAACW,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EACxD;EAGAX,KAAK,CAACY,qBAAqB,CAAC,UAAU,EAAEV,OAAO,CAAC;EAChDF,KAAK,CAACY,qBAAqB,CAAC,UAAU,EAAEjB,MAAM,CAAC;EAC/CK,KAAK,CAACY,qBAAqB,CAAC,UAAU,EAAET,IAAI,CAAC;EAE7C,IAAMU,YAAY,GAAG,SAAfA,YAAY;IAAA,OAASb,KAAK,CAACc,KAAK,EAAE;EAAA;EAExC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,KAAK,EAAI;IAC7B,IAAI,CAACA,KAAK,CAACC,MAAM,CAACnB,KAAK,CAACR,MAAM,EAAE;MAC9B;IACF;IACAQ,KAAK,GAAGW,KAAK,CAACS,IAAI,CAACF,KAAK,CAACC,MAAM,CAACnB,KAAK,CAAC;IAEtCI,OAAO,CAACiB,SAAS,GAAG,EAAE;IACtBxB,MAAM,CAACS,KAAK,CAACC,OAAO,GAAG,QAAQ;IAE/BP,KAAK,CAACsB,OAAO,CAAC,UAAAC,IAAI,EAAI;MACpB,IAAI,CAACA,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC,EAAE;QAC7B;MACF;MAEA,IAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,MAAM,GAAG,UAAAC,EAAE,EAAI;QACpB,IAAMC,GAAG,GAAGD,EAAE,CAACV,MAAM,CAACY,MAAM;QAC5B3B,OAAO,CAAC4B,kBAAkB,CAAC,YAAY,uGAEET,IAAI,CAACU,IAAI,mDACpCH,GAAG,qBAASP,IAAI,CAACU,IAAI,6EAEvBV,IAAI,CAACU,IAAI,qCACZC,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACa,IAAI,GAAG,IAAI,CAAC,0DAGnC;MAEJ,CAAC;MAEDV,MAAM,CAACW,aAAa,CAACd,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,IAAMe,aAAa,GAAG,SAAhBA,aAAa,CAAGpB,KAAK,EAAI;IAC7B,IAAI,CAACA,KAAK,CAACC,MAAM,CAACoB,OAAO,CAACN,IAAI,EAAE;MAC9B;IACF;IAEA,IAAQA,IAAI,GAAKf,KAAK,CAACC,MAAM,CAACoB,OAAO,CAA7BN,IAAI;IACZjC,KAAK,GAAGA,KAAK,CAACwC,MAAM,CAAC,UAAAjB,IAAI;MAAA,OAAIA,IAAI,CAACU,IAAI,KAAKA,IAAI;IAAA,EAAC;IAEhD,IAAI,CAACjC,KAAK,CAACR,MAAM,EAAE;MACjBK,MAAM,CAACS,KAAK,CAACC,OAAO,GAAG,MAAM;IAC/B;IAEA,IAAMkC,KAAK,GAAGrC,OAAO,CAACD,aAAa,wBAAgB8B,IAAI,SAAK,CAACS,OAAO,CAAC,gBAAgB,CAAC;IAEtFD,KAAK,CAAChD,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IAC/BiD,UAAU,CAAC;MAAA,OAAMF,KAAK,CAACG,MAAM,EAAE;IAAA,GAAE,GAAG,CAAC;EACvC,CAAC;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGC,EAAE,EAAI;IAC7BA,EAAE,CAACxC,KAAK,CAACyC,OAAO,GAAG,GAAG;IACtBD,EAAE,CAACzB,SAAS,gDAA8C;EAC5D,CAAC;EACD,IAAM2B,YAAY,GAAG,SAAfA,YAAY,CAAGF,EAAE,EAAI;IACzBA,EAAE,CAACzB,SAAS,GAAG,EAAE;EACnB,CAAC;EAED,IAAM4B,aAAa,GAAG,SAAhBA,aAAa,GAAS;IAC1B7C,OAAO,CAAC8C,gBAAgB,CAAC,iBAAiB,CAAC,CAAC5B,OAAO,CAAC,UAAA6B,CAAC;MAAA,OAAIA,CAAC,CAACP,MAAM,EAAE;IAAA,EAAC;IACpE,IAAMQ,WAAW,GAAGhD,OAAO,CAAC8C,gBAAgB,CAAC,eAAe,CAAC;IAC7DE,WAAW,CAAC9B,OAAO,CAACuB,gBAAgB,CAAC;IACrC5C,QAAQ,CAACD,KAAK,CAAC;IACf2C,UAAU,CAAC;MAAA,OAAMvC,OAAO,CAAC8C,gBAAgB,CAAC,gBAAgB,CAAC,CAAC5B,OAAO,CAAC,UAAA6B,CAAC;QAAA,OAAIA,CAAC,CAACP,MAAM,EAAE;MAAA,EAAC;IAAA,GAAE,IAAI,CAAC;IAC3FD,UAAU,CAAC;MAAA,OAAM9C,MAAM,CAACS,KAAK,CAACC,OAAO,GAAG,MAAM;IAAA,GAAE,IAAI,CAAC;EACvD,CAAC;EAEDF,IAAI,CAACgD,gBAAgB,CAAC,OAAO,EAAEtC,YAAY,CAAC;EAC5Cb,KAAK,CAACmD,gBAAgB,CAAC,QAAQ,EAAEpC,aAAa,CAAC;EAC/Cb,OAAO,CAACiD,gBAAgB,CAAC,OAAO,EAAEf,aAAa,CAAC;EAChDzC,MAAM,CAACwD,gBAAgB,CAAC,OAAO,EAAEJ,aAAa,CAAC;AACjD","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const element = (tag, classes = [], content) => {\r\n  const node = document.createElement(tag)\r\n\r\n  if (classes.length) {\r\n    node.classList.add(...classes)\r\n  }\r\n\r\n  if (content) {\r\n    node.textContent = content\r\n  }\r\n\r\n  return node\r\n}\r\n\r\nfunction noop() { }\r\n\r\nexport function upload(selector, options = {}) {\r\n  let files = []\r\n  const onUpload = options.onUpload ?? noop\r\n  const input = document.querySelector(selector)\r\n  const preview = element('div', ['preview'])\r\n  const open = element('button', ['btn'], 'Open')\r\n  const upload = element('button', ['btn', 'primary'], 'Load')\r\n  upload.style.display = 'none'\r\n\r\n\r\n  if (options.multi) {\r\n    input.setAttribute('multiple', true)\r\n  }\r\n\r\n  if (options.accept && Array.isArray(options.accept)) {\r\n    input.setAttribute('accept', options.accept.join(','))\r\n  }\r\n\r\n\r\n  input.insertAdjacentElement('afterend', preview)\r\n  input.insertAdjacentElement('afterend', upload)\r\n  input.insertAdjacentElement('afterend', open)\r\n\r\n  const triggerInput = () => input.click()\r\n\r\n  const changeHandler = event => {\r\n    if (!event.target.files.length) {\r\n      return\r\n    }\r\n    files = Array.from(event.target.files)\r\n\r\n    preview.innerHTML = ''\r\n    upload.style.display = 'inline'\r\n\r\n    files.forEach(file => {\r\n      if (!file.type.match('image')) {\r\n        return\r\n      }\r\n\r\n      const reader = new FileReader()\r\n\r\n      reader.onload = ev => {\r\n        const src = ev.target.result\r\n        preview.insertAdjacentHTML('afterbegin', `\r\n        <div class=\"preview-image\">\r\n        <div class=\"preview-remove\" data-name=\"${file.name}\">&times</div>\r\n          <img src=\"${src}\"alt=\"${file.name}\"/>\r\n          <div class=\"preview-info\">\r\n            <span>${file.name}</span>\r\n            ${`${Math.round(file.size / 1024)} KB`}\r\n          </div>\r\n        </div>\r\n        `)\r\n\r\n      }\r\n\r\n      reader.readAsDataURL(file)\r\n    })\r\n  }\r\n\r\n  const removeHandler = event => {\r\n    if (!event.target.dataset.name) {\r\n      return\r\n    }\r\n\r\n    const { name } = event.target.dataset\r\n    files = files.filter(file => file.name !== name)\r\n\r\n    if (!files.length) {\r\n      upload.style.display = 'none'\r\n    }\r\n\r\n    const block = preview.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image')\r\n\r\n    block.classList.add('removing')\r\n    setTimeout(() => block.remove(), 250)\r\n  }\r\n\r\n  const clearPreviewInfo = el => {\r\n    el.style.opacity = '1'\r\n    el.innerHTML = `<div class=\"preview-info-progress\"></div>`\r\n  }\r\n  const clearPreview = el => {\r\n    el.innerHTML = ''\r\n  }\r\n\r\n  const uploadHandler = () => {\r\n    preview.querySelectorAll('.preview-remove').forEach(e => e.remove())\r\n    const previewInfo = preview.querySelectorAll('.preview-info')\r\n    previewInfo.forEach(clearPreviewInfo)\r\n    onUpload(files)\r\n    setTimeout(() => preview.querySelectorAll('.preview-image').forEach(e => e.remove()), 2000)\r\n    setTimeout(() => upload.style.display = 'none', 2000)\r\n  }\r\n\r\n  open.addEventListener('click', triggerInput)\r\n  input.addEventListener('change', changeHandler)\r\n  preview.addEventListener('click', removeHandler)\r\n  upload.addEventListener('click', uploadHandler)\r\n}","import { upload } from './upload.js'\r\n\r\n\r\n\r\nupload('#file', {\r\n  multi: true,\r\n  accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n})\r\n\r\n\r\n"]}